name: Security Scanning

on:
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  # Dependency Vulnerability Scanning
  dependency-scan:
    runs-on: ubuntu-latest
    name: Dependency Vulnerability Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit
        pip install -r requirements.txt
        
    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json
      continue-on-error: true
        
    - name: Run pip-audit
      run: |
        pip-audit --format=json --output=pip-audit-report.json
      continue-on-error: true
        
    - name: Upload vulnerability reports
      uses: actions/upload-artifact@v4
      with:
        name: vulnerability-reports
        path: |
          safety-report.json
          pip-audit-report.json

  # Code Security Scanning
  code-security:
    runs-on: ubuntu-latest
    name: Code Security Analysis
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit semgrep
        
    - name: Run Bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-security-report.json
      continue-on-error: true
        
    - name: Run Semgrep security scan
      run: |
        semgrep --config=auto src/ --json --output=semgrep-report.json
      continue-on-error: true
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: |
          bandit-security-report.json
          semgrep-report.json

  # Docker Image Security Scanning
  docker-security:
    runs-on: ubuntu-latest
    name: Docker Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: |
        docker build -t intel-ai-framework:security-test .
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.24.0
      with:
        image-ref: 'intel-ai-framework:security-test'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  # License Compliance Check
  license-check:
    runs-on: ubuntu-latest
    name: License Compliance
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install license checker
      run: |
        python -m pip install --upgrade pip
        pip install pip-licenses
        pip install -r requirements.txt
        
    - name: Check licenses
      run: |
        pip-licenses --format=json --output-file=licenses-report.json
        pip-licenses --format=csv --output-file=licenses-report.csv
        
    - name: Upload license reports
      uses: actions/upload-artifact@v4
      with:
        name: license-reports
        path: |
          licenses-report.json
          licenses-report.csv

  # Secret Scanning
  secret-scan:
    runs-on: ubuntu-latest
    name: Secret Detection
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install TruffleHog
      run: |
        pip install truffleHog3
        
    - name: Run secret scan
      run: |
        trufflehog3 --format json --output trufflehog-report.json .
      continue-on-error: true
        
    - name: Upload secret scan results
      uses: actions/upload-artifact@v4
      with:
        name: secret-scan-results
        path: trufflehog-report.json

  # Security Report Summary
  security-summary:
    runs-on: ubuntu-latest
    needs: [dependency-scan, code-security, docker-security, license-check, secret-scan]
    name: Security Summary Report
    if: always()
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create security summary
      run: |
        echo "# Security Scan Summary" > security-summary.md
        echo "Generated on: $(date)" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "## Scans Performed" >> security-summary.md
        echo "- ✅ Dependency vulnerability scan" >> security-summary.md
        echo "- ✅ Code security analysis" >> security-summary.md
        echo "- ✅ Docker image security scan" >> security-summary.md
        echo "- ✅ License compliance check" >> security-summary.md
        echo "- ✅ Secret detection scan" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "## Results" >> security-summary.md
        echo "See attached artifacts for detailed reports." >> security-summary.md
        
    - name: Upload security summary
      uses: actions/upload-artifact@v4
      with:
        name: security-summary
        path: security-summary.md
